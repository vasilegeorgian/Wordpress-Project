(()=>{"use strict";var t={n:e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},d:(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const e=jQuery;var n=t.n(e);const a=devowlWp_utils,o=()=>window[a.BaseOptions.getPureSlug("real-utils",!0)].others;let i,s;const c=(...t)=>(s||(s=(0,a.createLocalizationFactory)("".concat("devowl-wp","-").concat("real-utils")))).__(...t),l={path:"/feedback/:slug",method:a.RouteHttpVerb.POST};class r{constructor(t,e,n){this.slug=void 0,this.href=void 0,this.$handler=void 0,this.slug=t,this.$handler=n,this.href=e,this.init()}async close(t,e=!1){if(t.preventDefault(),this.$handler.pointer("widget").find("input, .button").attr("disabled","disabled"),e)window.open(this.href,"_self");else{const{choice:e,note:n,email:o}=this.getValidInput();try{"none"!==e&&await((...t)=>(i||(i=(0,a.createRequestFactory)(window[a.BaseOptions.getPureSlug("real-utils",!0)]))).request(...t))({location:l,request:{reason:e,note:n,email:o},params:{slug:this.slug}})}catch(t){}finally{window.open(this.href,"_self")}}}buttons(){const t=n()('<a class="button" href="#">'.concat(c("Contact support"),"</a>")).click((()=>{window.open("https://devowl.io/support/","_blank")})),e=n()('<a class="button" href="#">'.concat(c("Skip & Deactivate"),"</a>")).click((t=>{this.close(t,!0)})),a=n()('<a class="hidden button button-primary" href="#">'.concat(c("Deactivate"),"</a>")).click((t=>{this.validate()&&this.close(t,!1)}));return n()('<div class="real-utils-pointer-buttons" />').append(a,e,t)}validate(){return this.validateNote()&&this.validatePrivacy()&&this.validateEmail()}validateNote(){const t=n()('[name="'.concat(this.slug,'-skip-note"]')).is(":checked"),e=n()(".notice-".concat(this.slug,"-note")),{choice:a,note:o}=this.getValidInput();return t||o||-1!==["upgrade-to-pro","temp","none"].indexOf(a)?(e.hide(),!0):(e.show(),!1)}validatePrivacy(){const t=n()('[name="'.concat(this.slug,'-privacy"]')).is(":checked"),e=n()(".notice-".concat(this.slug,"-privacy")),{email:a}=this.getValidInput();return a&&!t?(e.show(),!1):(e.hide(),!0)}validateEmail(){const t=n()(".notice-".concat(this.slug,"-email")),{email:e}=this.getValidInput();return e&&!/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e.toLowerCase())?(t.show(),!1):(t.hide(),!0)}getValidInput(){const t=n()('[name="'.concat(this.slug,'-deactivate-choice"]:checked')).val(),e=n()('[name="'.concat(this.slug,'-note"]')).val(),a=e?n()('[name="'.concat(this.slug,'-email"]')).val():"";return!t&&e?{choice:"other",note:e,email:a}:t?{choice:t,note:e,email:a}:void 0}init(){const t=c("Too bad you are leaving"),e=o().names[this.slug],a=c("Please give us feedback why you deactivate <strong>%s</strong>.",e),i={"upgrade-to-pro":c("Upgrade to PRO Version"),"not-working":c("Plugin did not work"),"missing-features":c("Not the features I want"),incompatible:c("Incompatible with other themes or plugins"),"missing-doc":c("Lack of documentation"),"found-better-plugin":c("Found a better plugin"),temp:c("Temporary deactivation"),none:c("I do not want to give feedback"),other:c("Other")},s=this.$handler.pointer({pointerClass:"wp-pointer real-utils-feedback-pointer",content:"<h3>".concat(t,"</h3><p>").concat(a,"</p>\n<fieldset>\n    ").concat(Object.keys(i).map((t=>'<label class="col-2"><input type="radio" name="'.concat(this.slug,'-deactivate-choice" value="').concat(t,'" /> ').concat(i[t],"</label>"))).join(""),'\n        <div class="clear"></div>\n        <br />\n    <label class="').concat(this.slug,'-section-note">\n        <strong>').concat(c("What could we do better?"),'</strong>\n        <input type="text" class="regular-text" name="').concat(this.slug,'-note" />\n        <div class="notice notice-').concat(this.slug,'-note notice-error notice-alt hidden"><p>').concat(c("Please enter a text here or check the box below."),'</p></div>\n    </label>\n    <label class="').concat(this.slug,'-section-note">\n        <input type="checkbox" name="').concat(this.slug,'-skip-note" /> ').concat(c("I don't want to add a comment and hence not help to make %s better.",e),'\n    </label>\n    <label class="').concat(this.slug,'-section-email" style="display:none">\n        <br /><strong>').concat(c("Email for answer/solution (optional)?"),'</strong>\n        <input type="text" class="regular-text" name="').concat(this.slug,'-email" />\n        <div class="notice notice-').concat(this.slug,'-email notice-error notice-alt hidden"><p>').concat(c("Please provide a valid email."),'</p></div>\n    </label>\n    <label class="').concat(this.slug,'-section-email" style="display:none">\n        <input type="checkbox" name="').concat(this.slug,'-privacy" /> ').concat(c('I would like to receive an answer for my issue. For this purpose I agree to the data processing of my feedback and my email address. I have read the devowl.io <a href="https://devowl.io/privacy-policy/" target="_blank">privacy policy</a> and agree to it.',e),'\n        <div class="notice notice-').concat(this.slug,'-privacy notice-error notice-alt hidden"><p>').concat(c("If you would like to be contacted by us, please accept the privacy policy. If you prefer not to be contacted, leave the email field blank."),"</p></div>\n    </label>\n</fieldset>"),buttons:this.buttons.bind(this)}).pointer("open").pointer("widget");s.find("input").on("input",(()=>{const t=this.getValidInput(),e="none"===(null==t?void 0:t.choice);s.find(".button:eq(0)").css("display",t?"inline-block":"none"),s.find(".button:eq(1)").css("display",t?"none":"inline-block"),s.find(".button:eq(1)").css("display",t?"none":"inline-block"),n()('[name="'.concat(this.slug,'-skip-note"]')).parent().css("display",null!=t&&t.note?"none":"block"),n()(".".concat(this.slug,"-section-email")).css("display",null!=t&&t.note&&!e?"block":"none"),n()(".".concat(this.slug,"-section-note")).css("display",e?"none":"block")}))}}n()(document).on("click","tr.active .row-actions .deactivate a",(function(t){const[e]=n()(this).parents("tr.active").data("plugin").split("/");if(o().names[e]){const a=n()(this).attr("href");return new r(e,a,n()(this)),t.preventDefault(),!1}return!0}))})();
//# sourceMappingURL=feedback.js.map